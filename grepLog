#!/bin/bash
DEST=/usr/local/bin
PROG=$(basename $0)
LogFile=${LogFile:-/var/log/$PROG.log}
StrSearch=${StrSearch:-"ERROR/MainProcess"}
User=backend       #for test
Job=worker-tasks
########################################################################
help() {
prog=$(basename $0)
echo "
 Usage: $prog [-h] [-i ] [ -l /var/log/grepLog ] [ -s ERROR/MainProcess ] [ -c ./grepLog.cfg ]
   -h - help
   -l - log file
   -s - string search
   -c - config file
   -i - install in /usr/local/bin /etc/systemd/system
   -d - delete and disable
"
   exit 1
} ######################################################################
install(){

sudo cp $PROG $DEST
sudo chmod +x $DEST/$PROG

sudo bash -c "cat <<EndL >/etc/systemd/system/$PROG.service
[Unit]
Description=$PROG
After=syslog.target
[Service]
Type=forking
WorkingDirectory=/tmp
User=backend
Group=wheel
Environment=LogFile=$LogFile
Environment=StrSearch=$StrSearch
ExecStart=$DEST/$PROG
[Install]
WantedBy=multi-user.target
WantedBy=timers.target
EndL
"
sudo bash -c "cat <<EndL >/etc/systemd/system/$PROG.timer
[Timer]
OnBootSec=5min
OnUnitActiveSec=5min
EndL
"
sudo systemctl daemon-reload
sudo systemctl enable $PROG.service
sudo systemctl start  $PROG.service
sudo systemctl start  $PROG.timer
} ######################################################################
delete(){
   sudo systemctl stop     $PROG.service
   sudo systemctl stop     $PROG.timer
   sudo systemctl disable  $PROG.service
   sudo systemctl disable  $PROG.timer
   sudo rm /etc/systemd/system/{$PROG.service,$PROG.timer}
#   sudo systemctl stop     $User@$Job.service
#   sudo systemctl disable  $User@$Job.service
#   sudo rm /etc/systemd/system/$User@$Job.service
#   sudo $LogFile
} ######################################################################
testCreateLogFile(){
sudo bash -c  "cat <<EndL >>$LogFile
Dec 27 00:01:30 ip-10-0-5-224 worker-tasks: [2019-12-27 00:01:30,710: ERROR/MainProcess] Error in timer: TimeoutError('Timeout reading from socket',)\nTraceback (most recent call last):\n
EndL
"
} ######################################################################
testCreateUserAndJob(){
sudo adduser $User
sudo usermod -aG wheel  $User
sudo bash -c "echo \"$User ALL=(ALL)  NOPASSWD: ALL\"  > /etc/sudoers.d/$User"
sudo bash -c "cat <<EndL >/etc/systemd/system/$User@$Job.service
[Unit]
Description=worker-tasks
After=syslog.target
[Service]
Type=forking
WorkingDirectory=/tmp
User=$User
Group=wheel
ExecStart=/usr/bin/echo  \"$Job start $(date)\" > $LogFile
ExecReload=/usr/bin/echo \"$Job reload  $(date)\" > $LogFile
[Install]
WantedBy=multi-user.target
EndL
"
sudo systemctl daemon-reload
sudo systemctl enable $User@$Job.service
sudo systemctl start  $User@$Job.service
} ######################################################################
#
# main
#
case $1 in
   -i) install ;               exit  ;;
   -d) delete  ;               exit  ;;
   -s) StrSearch=$2;           shift ;;
   -l) LogFile=$2 ;            shift ;;
   -c) ConfigFile=$2 ;         shift ;;
   -t) testCreateLogFile;      exit  ;;
   -u) testCreateUserAndJob;   exit  ;;
   -h) help;                   exit  ;;
esac

[ ! -f $LogFile ] &&  {  echo " No LogFile $LogFile" ;  exit -1 ; }
find=$( grep $StrSearch $LogFile )
[ $? = 0 ] && job=$(echo $find  | awk -F: '{print $3 }' | awk -F' ' '{print $3 }')
[ _"$job" != _ ] && {
   sudo mv $LogFile $LogFile.$(date +%Y-%m-%d_%H:%M:%S)
   sudo systemctl restart backend@${job}.service
}
